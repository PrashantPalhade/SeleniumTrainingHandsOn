https://github.com/PrashantPalhade/SeleniumTrainingHandsOn

===GIT == Instruction

echo "# SeleniumTrainingHandsOn" >> README.md
git init   // initialize
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/PrashantPalhade/SeleniumTrainingHandsOn.git
git push -u origin master


…or push an existing repository from the command line
git remote add origin https://github.com/PrashantPalhade/SeleniumTrainingHandsOn.git
git push -u origin master

…or import code from another repository
You can initialize this repository with code from a Subversion, Mercurial, or TFS project.



https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup

GIT ------ Cmd ----
Microsoft Windows [Version 6.1.7600]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

C:\Windows\system32>cd ..

C:\Windows>git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch

   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

C:\Windows>cd ..

C:\>cd e :
The filename, directory name, or volume label syntax is incorrect.

C:\>cd d:
D:\

C:\>e:

E:\>c:

C:\>git config --list --show-origin
file:"C:\\ProgramData/Git/config"       core.symlinks=false
file:"C:\\ProgramData/Git/config"       core.autocrlf=true
file:"C:\\ProgramData/Git/config"       core.fscache=true
file:"C:\\ProgramData/Git/config"       color.diff=auto
file:"C:\\ProgramData/Git/config"       color.status=auto
file:"C:\\ProgramData/Git/config"       color.branch=auto
file:"C:\\ProgramData/Git/config"       color.interactive=true
file:"C:\\ProgramData/Git/config"       help.format=html
file:"C:\\ProgramData/Git/config"       rebase.autosquash=true
file:C:/Program Files/Git/mingw64/etc/gitconfig http.sslcainfo=C:/Program Files/
Git/mingw64/ssl/certs/ca-bundle.crt
file:C:/Program Files/Git/mingw64/etc/gitconfig http.sslbackend=openssl
file:C:/Program Files/Git/mingw64/etc/gitconfig diff.astextplain.textconv=astext
plain
file:C:/Program Files/Git/mingw64/etc/gitconfig filter.lfs.clean=git-lfs clean -
- %f
file:C:/Program Files/Git/mingw64/etc/gitconfig filter.lfs.smudge=git-lfs smudge
 -- %f
file:C:/Program Files/Git/mingw64/etc/gitconfig filter.lfs.process=git-lfs filte
r-process
file:C:/Program Files/Git/mingw64/etc/gitconfig filter.lfs.required=true

C:\>git config --global --list
fatal: unable to read config file 'C:/Users/Admin/.gitconfig': No such file or d
irectory

C:\>git config --global --list
fatal: unable to read config file 'C:/Users/Admin/.gitconfig': No such file or d
irectory

C:\>git config --global --list
fatal: unable to read config file 'C:/Users/Admin/.gitconfig': No such file or d
irectory

C:\>git config --global --list
fatal: unable to read config file 'C:/Users/Admin/.gitconfig': No such file or d
irectory

C:\>




E:\Selinium\SeleniumHandsOn>git status
On branch master
nothing to commit, working tree clean

E:\Selinium\SeleniumHandsOn>git remote -v
origin  https://github.com/PrashantPalhade/SeleniumTrainingHandsOn.git (fetch)
origin  https://github.com/PrashantPalhade/SeleniumTrainingHandsOn.git (push)

E:\Selinium\SeleniumHandsOn>git push -u origin master
Username for 'https://github.com': PrashantPalhade
Password for 'https://PrashantPalhade@github.com':
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (7/7), 883 bytes | 441.00 KiB/s, done.
Total 7 (delta 0), reused 0 (delta 0)
To https://github.com/PrashantPalhade/SeleniumTrainingHandsOn.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

E:\Selinium\SeleniumHandsOn>

================== 17/06/2018 === Was editing



